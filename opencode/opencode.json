{
  "$schema": "https://opencode.ai/config.json",
  "theme": "tokyonight",
  "autoupdate": false,
  "share": "disabled",
  "model": "github-copilot/claude-sonnet-4",
  "small_model": "google/gemini-2.5-flash",
  "provider": {
    "Ollama": {
      "npm": "@ai-sdk/openai-compatible",
      "options": {
        "baseURL": "http://localhost:11434/v1"
      },
      "models": {
        "qwen2.5-coder:7b": {},
        "deepseek-r1:7b": {}
      }
    },
    "openrouter": {
      "models": {
        "moonshotai/kimi-k2:free": {}
      }
    }
  },
  "agent": {
    "deep-thinker": {
      "description": "Solves difficult problemes by thinking deeply about them.",
      "model": "openai/o3",
      "prompt": "You are a highly intelligent software engineering agent that can think deeply about problems and come up with creative solutions. You will be given a task, and you should think step by step to arrive at and provide the best solution.",
      "tools": {
        "write": false,
        "edit": false,
        "patch": false
      }
    },
    "debugger": {
      "description": "Debugging specialist for errors, test failures, and unexpected behavior.",
      "model": "google/gemini-2.5-pro",
      "prompt": "You are an expert debugger specializing in root cause analysis: when invoked, capture the error message and stack trace, identify reproduction steps, isolate the failure location, implement a minimal fix, and verify the solution; analyze error messages and logs, check recent code changes, form and test hypotheses, add strategic debug logging, and inspect variable states; for each issue, provide a root cause explanation, supporting evidence, a specific code fix, a testing approach, and prevention recommendations, focusing on fixing the underlying issue, not just symptoms."
    },
    "code-reviewer": {
      "description": "Expert code review specialist. Proactively reviews code for quality, security, and maintainability. Use immediately after writing or modifying code.",
      "model": "google/gemini-2.5-pro",
      "prompt": "You are a senior code reviewer ensuring high standards of code quality and security: when invoked, run git diff to see recent changes, focus on modified files, and begin review immediately; check that code is simple and readable, functions and variables are well-named, there is no duplicated code, proper error handling is present, no secrets or API keys are exposed, input validation is implemented, test coverage is good, and performance is considered; provide feedback organized by priorityâ€”critical issues (must fix), warnings (should fix), suggestions (consider improving)â€”and include specific examples of how to fix issues.",
      "tools": {
        "write": false,
        "edit": false,
        "patch": false
      }
    }
  },
  "keybinds": {
    "leader": "ctrl+a",
    "messages_half_page_up": "ctrl+u",
    "messages_half_page_down": "ctrl+d",
    "messages_last": "ctrl+z"
  },
  "experimental": {
    "hook": {
      "session_completed": [
        {
          "command": [
            "terminal-notifier",
            "-title",
            "opencode",
            "-message",
            "Agent run completed ðŸ¤–",
            "-group",
            "opencode",
            "-activate",
            "com.mitchellh.ghostty"
          ]
        }
      ]
    }
  },
  "mcp": {
    "playwright": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "@playwright/mcp@latest"]
    },
    "ios-simulator": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "ios-simulator-mcp"]
    },
    "figma": {
      "enabled": false,
      "type": "remote",
      "url": "http://127.0.0.1:3845/sse"
    },
    "figma-framelink": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "figma-developer-mcp", "--stdio"],
      "environment": {
        "FIGMA_API_KEY": "{env:FIGMA_API_KEY}"
      }
    },
    "package-version": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "mcp-package-version"]
    },
    "nx": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "nx-mcp", "~/Developer/steuerbot/frontend"]
    },
    "context7": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp"]
    },
    "sequential-thinking": {
      "enabled": false,
      "type": "local",
      "command": [
        "npx",
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ]
    },
    "ddg-search": {
      "enabled": false,
      "type": "local",
      "command": ["uvx", "duckduckgo-mcp-server"]
    },
    "linear": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "mcp-remote", "https://mcp.linear.app/sse"]
    },
    "notion": {
      "enabled": false,
      "type": "local",
      "command": ["npx", "-y", "mcp-remote", "https://mcp.notion.com/sse"]
    }
  }
}
