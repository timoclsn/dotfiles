git:
  paging:
    externalDiffCommand: difft --color=always --display=inline --syntax-highlight=on --tab-width=2
gui:
  nerdFontsVersion: "3"
  theme:
    activeBorderColor:
      - "#ff9e64"
      - "bold"
    inactiveBorderColor:
      - "#27a1b9"
    searchingActiveBorderColor:
      - "#ff9e64"
      - "bold"
    optionsTextColor:
      - "#7aa2f7"
    selectedLineBgColor:
      - "#283457"
    cherryPickedCommitFgColor:
      - "#7aa2f7"
    cherryPickedCommitBgColor:
      - "#bb9af7"
    markedBaseCommitFgColor:
      - "#7aa2f7"
    markedBaseCommitBgColor:
      - "#e0af68"
    unstagedChangesColor:
      - "#db4b4b"
    defaultFgColor:
      - "#c0caf5"
customCommands:
  - key: "C"
    description: "conventional commit"
    context: "files"
    prompts:
      - type: "menu"
        title: "Select commit type"
        key: "Type"
        options:
          - name: "feat (Add new feature)"
            value: "feat"
          - name: "fix (Fix a bug)"
            value: "fix"
          - name: "docs (Update documentation)"
            value: "docs"
          - name: "style (Format code, no logic change)"
            value: "style"
          - name: "refactor (Restructure code)"
            value: "refactor"
          - name: "perf (Improve performance)"
            value: "perf"
          - name: "test (Add or update tests)"
            value: "test"
          - name: "build (Update build system)"
            value: "build"
          - name: "ci (Update CI configuration)"
            value: "ci"
          - name: "chore (Update dependencies, configs)"
            value: "chore"
          - name: "revert (Revert previous commit)"
            value: "revert"
      - type: "input"
        title: "Scope (optional)"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Description"
        key: "Description"
    command: 'git commit -m "{{.Form.Type}}{{if .Form.Scope}}({{.Form.Scope}}){{end}}: {{.Form.Description}}"'
  - key: "<c-a>"
    description: "AI commit message (Codex)"
    context: "files"
    command: "ai-commit-message"
